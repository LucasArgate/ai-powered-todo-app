name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run backend linting
      run: pnpm --filter backend lint
      
    - name: Run backend tests
      run: pnpm --filter backend test
      
    - name: Run backend e2e tests
      run: pnpm --filter backend test:e2e
      
    - name: Generate backend coverage report
      run: pnpm --filter backend test:cov
      
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run frontend linting
      run: pnpm --filter frontend lint
      
    - name: Run frontend tests
      run: pnpm --filter frontend test
      
    - name: Generate frontend coverage report
      run: pnpm --filter frontend test:coverage
      
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build backend
      run: pnpm --filter backend build
      
    - name: Build frontend
      run: pnpm --filter frontend build
      
    - name: Build complete application
      run: pnpm build
      
    # Add deployment steps here based on your deployment strategy
    # Examples:
    # - Deploy to Vercel, Netlify, AWS, etc.
    # - Run database migrations
    # - Update environment variables
    
    - name: Deployment successful
      run: echo "Build completed successfully! Ready for deployment."
